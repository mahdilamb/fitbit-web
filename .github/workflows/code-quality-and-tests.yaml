
name: Check code quality and run unit tests

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: browser-actions/setup-chrome@v1
      - run: chrome --version
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .
      - name: Print dependencies
        run: pip freeze
      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[test]
      - name: Unit tests [pytest]
        if: ${{ always() }}
        env: # Or as an environment variable
          FITBIT_CLIENT_ID: ${{ secrets.FITBIT_CLIENT_ID }}
          FITBIT_CLIENT_SECRET: ${{ secrets.FITBIT_CLIENT_SECRET }}
          FITBIT_REDIRECT_URL: ${{ secrets.FITBIT_REDIRECT_URL }}
        
        run: pytest --cov=fitbit_web --cov-report term-missing
      - name: Check docstrings [pydocstyle]
        if: ${{ always() }}
        run: pydocstyle fitbit_web
      - name: Check code quality [black]
        if: ${{ always() }}
        run: black --check fitbit_web
      - name: Check security [bandit]
        if: ${{ always() }}
        run: bandit -r fitbit_web
